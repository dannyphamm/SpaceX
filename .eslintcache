[{"D:\\Users\\Danny Pham\\Documents\\GitHub\\antdesign\\src\\index.tsx":"1","D:\\Users\\Danny Pham\\Documents\\GitHub\\antdesign\\src\\App.tsx":"2","D:\\Users\\Danny Pham\\Documents\\GitHub\\antdesign\\src\\Countdown.tsx":"3","D:\\Users\\Danny Pham\\Documents\\GitHub\\antdesign\\src\\Upcoming.tsx":"4","D:\\Users\\Danny Pham\\Documents\\GitHub\\antdesign\\src\\Past.tsx":"5","D:\\Users\\Danny Pham\\Documents\\GitHub\\antdesign\\src\\reducers\\index.tsx":"6","D:\\Users\\Danny Pham\\Documents\\GitHub\\antdesign\\src\\reducers\\launchpads.tsx":"7","D:\\Users\\Danny Pham\\Documents\\GitHub\\antdesign\\src\\reducers\\upcoming.tsx":"8","D:\\Users\\Danny Pham\\Documents\\GitHub\\antdesign\\src\\reducers\\past.tsx":"9","D:\\Users\\Danny Pham\\Documents\\GitHub\\antdesign\\src\\Home.tsx":"10","D:\\Users\\Danny Pham\\Documents\\GitHub\\antdesign\\src\\Launch.tsx":"11","D:\\Users\\Danny Pham\\Documents\\GitHub\\antdesign\\src\\Navbar.tsx":"12","D:\\Users\\Danny Pham\\Documents\\GitHub\\antdesign\\src\\RightMenu.tsx":"13"},{"size":432,"mtime":1608560379123,"results":"14","hashOfConfig":"15"},{"size":4495,"mtime":1609565717256,"results":"16","hashOfConfig":"15"},{"size":490,"mtime":1608561945661,"results":"17","hashOfConfig":"15"},{"size":5377,"mtime":1610088252650,"results":"18","hashOfConfig":"15"},{"size":5762,"mtime":1610088232302,"results":"19","hashOfConfig":"15"},{"size":220,"mtime":1608560569751,"results":"20","hashOfConfig":"15"},{"size":559,"mtime":1608560542170,"results":"21","hashOfConfig":"15"},{"size":562,"mtime":1609819856520,"results":"22","hashOfConfig":"15"},{"size":550,"mtime":1608560553438,"results":"23","hashOfConfig":"15"},{"size":2936,"mtime":1609565964322,"results":"24","hashOfConfig":"15"},{"size":2005,"mtime":1609308752971,"results":"25","hashOfConfig":"15"},{"size":1149,"mtime":1609250924862,"results":"26","hashOfConfig":"15"},{"size":562,"mtime":1609250436959,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"nmrth3",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"55"},"D:\\Users\\Danny Pham\\Documents\\GitHub\\antdesign\\src\\index.tsx",[],["59","60"],"D:\\Users\\Danny Pham\\Documents\\GitHub\\antdesign\\src\\App.tsx",[],"D:\\Users\\Danny Pham\\Documents\\GitHub\\antdesign\\src\\Countdown.tsx",[],"D:\\Users\\Danny Pham\\Documents\\GitHub\\antdesign\\src\\Upcoming.tsx",["61","62"],"import React, { useEffect } from 'react'\r\nimport { useState } from 'react'\r\nimport { Skeleton, Row, Col, Card, Pagination } from 'antd';\r\nimport moment from 'moment';\r\nimport 'antd/dist/antd.css';\r\nimport Countdown from './Countdown';\r\nimport { YoutubeFilled, ReadFilled } from '@ant-design/icons';\r\nimport PropTypes from 'prop-types'\r\nfunction Upcoming({ value, valueLP }) {\r\n    const style = { height: \"100%\", margin: \"0 auto\", display: \"flex\", flexFlow: \"column\" };\r\n    const styleBody = { flex: \"1 1 auto\" };\r\n    const styleCover = { padding: \"10px 10px\" }\r\n    const paginationStyle = { paddingBottom: \"24px\", textAlign: \"center\" as const }\r\n\r\n    const { Meta } = Card;\r\n    const [minValue, setMinValue] = useState<number>(0);\r\n    const [maxValue, setMaxValue] = useState<number>(25);\r\n    const [pageSize, setPageSize] = useState<number>(25)\r\n    const [items, setItems] = useState<any>([]);\r\n    const [items1, setItems1] = useState<any>([]);\r\n    const [launchpads, setLaunchPads] = useState<any>([]);\r\n    const skeleton = [] as any;\r\n    let array = [] as any;\r\n    let tbdArray = [] as any;\r\n    for (var i = 0; i < 25; i++) {\r\n        skeleton.push(<Col className=\"gutter-row\" xs={{ span: 24}} lg={{ span: 12}} xl={{ span: 8}} xxl={{ span: 6}}><Card\r\n            style={style}\r\n            actions={[\r\n                <YoutubeFilled key=\"youtube\" />,\r\n                <ReadFilled key=\"article\" />\r\n            ]}\r\n        >\r\n            <Skeleton loading={true} active></Skeleton>\r\n        </Card></Col>)\r\n    }\r\n    function comp(a, b) {\r\n        return new Date(a.date_unix).getTime() - new Date(b.date_unix).getTime();\r\n    }\r\n\r\n    Promise.resolve(value).then((result) => {\r\n        setItems1(result.sort(comp));\r\n\r\n    })\r\n    useEffect(() => {\r\n        for(let i in items1) {\r\n            if(items1[i][\"date_percision\"] !== \"hourly\"){\r\n                items1[i] = {...items1[i], tbd: true}\r\n            }\r\n        }\r\n        array = Object.keys(items1).map((key)=> items1[key]).sort(comp);\r\n        setItems(array)\r\n    }, [items1])\r\n    \r\n    Promise.resolve(valueLP).then((result) => {\r\n        setLaunchPads(result)\r\n    })\r\n    function handleChange(value, pageSize) {\r\n        setPageSize(pageSize)\r\n        if (value <= 1) {\r\n            setMinValue(0)\r\n            setMaxValue(pageSize)\r\n        } else {\r\n            setMinValue((value - 1) * pageSize)\r\n            setMaxValue(value * pageSize)\r\n        }\r\n    }\r\n    function getLaunchpad(launchpadID: any) {\r\n        const launchpad = launchpads.find(launchpad => launchpad['id'] === launchpadID);\r\n        return (launchpad['name']);\r\n    }\r\n\r\n    function getLocalTime(epoc: number) {\r\n        const d = moment.unix(epoc).format(\"hh:mmA DD/MM/YYYY\");\r\n        return d.toString();\r\n    }\r\n    function getLocalTimeString(epoc: number) {\r\n        const d = moment.unix(epoc).format(\"MMMM YYYY\");\r\n        return \"NET \" + d.toString();\r\n    }\r\n\r\n    \r\n    if (items.length === 0 || launchpads.length === 0) {\r\n        return (\r\n            <Row gutter={[{ xs: 8, sm: 16, md: 24, lg: 32 }, { xs: 8, sm: 16, md: 24, lg: 32 }]}>\r\n                {skeleton}\r\n            </Row>\r\n        )\r\n    } else {\r\n        return (\r\n            <div>\r\n                <Pagination\r\n                    style={paginationStyle}\r\n                    defaultCurrent={1}\r\n                    onChange={handleChange}\r\n                    pageSize={pageSize}\r\n                    total={items.length}\r\n                    responsive={true}\r\n                    pageSizeOptions={[\"25\", \"50\", \"75\", \"100\"]}\r\n                />\r\n\r\n                <Row gutter={[{ xs: 8, sm: 16, md: 24, lg: 32 }, { xs: 8, sm: 16, md: 24, lg: 32 }]}>\r\n                    {items.slice(minValue, maxValue).map((item: { [x: string]: number; }) => (\r\n                        <Col className=\"gutter-row\" xs={{ span: 24}} lg={{ span: 12}} xl={{ span: 8}} xxl={{ span: 6}} key={item['id']}>\r\n                            <Card\r\n                                hoverable\r\n                                style={style}\r\n                                bodyStyle={styleBody}\r\n                                cover={<img alt=\"example\" src={(item['links']['patch']['large'] === null) ? \"https://www.spacex.com/static/images/share.jpg\" : item['links']['patch']['large']} style={styleCover} />}\r\n                            >\r\n                                <Meta title={item['name']} />\r\n                                <Meta title={\"Launchpad: \" + getLaunchpad(item['launchpad'])}  />\r\n                                <Meta description={(item['tbd']) ? getLocalTimeString(item['date_unix']) : getLocalTime(item['date_unix'])} style={{ fontWeight: 'bold' }}/>\r\n                                <Meta description={(item['details'] === null ? \"No Information Provided\" : item['details'])} />\r\n                                \r\n                                <br />\r\n                                {(item['tbd']) ? null : <Meta description={<Countdown time={item['date_unix']}></Countdown>} />}\r\n                                \r\n                            </Card>\r\n                        </Col>\r\n                    )\r\n                    )\r\n                    }\r\n                </Row >\r\n            </div>\r\n        )\r\n    }\r\n}\r\nUpcoming.propTypes = {\r\n    value: PropTypes.object,\r\n    valueLP: PropTypes.object,\r\n}\r\n\r\nexport default Upcoming\r\n","D:\\Users\\Danny Pham\\Documents\\GitHub\\antdesign\\src\\Past.tsx",[],"D:\\Users\\Danny Pham\\Documents\\GitHub\\antdesign\\src\\reducers\\index.tsx",[],"D:\\Users\\Danny Pham\\Documents\\GitHub\\antdesign\\src\\reducers\\launchpads.tsx",[],"D:\\Users\\Danny Pham\\Documents\\GitHub\\antdesign\\src\\reducers\\upcoming.tsx",[],"D:\\Users\\Danny Pham\\Documents\\GitHub\\antdesign\\src\\reducers\\past.tsx",[],"D:\\Users\\Danny Pham\\Documents\\GitHub\\antdesign\\src\\Home.tsx",[],"D:\\Users\\Danny Pham\\Documents\\GitHub\\antdesign\\src\\Launch.tsx",[],"D:\\Users\\Danny Pham\\Documents\\GitHub\\antdesign\\src\\Navbar.tsx",["63"],"import { Button, Drawer } from 'antd'\r\nimport React, { useState } from 'react'\r\nimport RightMenu from './RightMenu'\r\n\r\nfunction Navbar() {\r\n    const [visible, setVisible] = useState<boolean>(false);\r\n    function showDrawer() {\r\n        setVisible(true)\r\n    }\r\n\r\n    function onClose() {\r\n        setVisible(false)\r\n    }\r\n    return (\r\n        <nav className=\"menuBar\">\r\n            <div className=\"logo\">\r\n                <a href=\"\">logo</a>\r\n            </div>\r\n            <div className=\"menuCon\">\r\n                <div className=\"rightMenu\">\r\n                    <RightMenu />\r\n                </div>\r\n                <Button className=\"barsMenu\" type=\"primary\" onClick={showDrawer}>\r\n                    <span className=\"barsBtn\"></span>\r\n                </Button>\r\n                <Drawer\r\n                    title=\"Basic Drawer\"\r\n                    placement=\"right\"\r\n                    closable={false}\r\n                    onClose={onClose}\r\n                    visible={visible}\r\n                >\r\n                    <RightMenu />\r\n                </Drawer>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n",["64","65"],"D:\\Users\\Danny Pham\\Documents\\GitHub\\antdesign\\src\\RightMenu.tsx",["66","67"],"import React from 'react'\r\nimport { Menu } from 'antd';\r\nimport { BrowserRouter as Link } from \"react-router-dom\";\r\n\r\nfunction RightMenu() {\r\n    const SubMenu = Menu.SubMenu;\r\n    const MenuItemGroup = Menu.ItemGroup;\r\n    return (\r\n        <Menu theme=\"dark\" mode=\"horizontal\" >\r\n            <Menu.Item key=\"Home\" ><Link to=\"/\" />Home</Menu.Item>\r\n            <Menu.Item key=\"Upcoming\" ><Link to=\"/upcoming\" />Upcoming</Menu.Item>\r\n            <Menu.Item key=\"Past\" ><Link to=\"/past\" /> Past</Menu.Item>\r\n        </Menu>\r\n    )\r\n}\r\n\r\nexport default RightMenu\r\n",{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":24,"column":9,"nodeType":"74","messageId":"75","endLine":24,"endColumn":17},{"ruleId":"76","severity":1,"message":"77","line":50,"column":17,"nodeType":"78","endLine":50,"endColumn":72},{"ruleId":"79","severity":1,"message":"80","line":17,"column":17,"nodeType":"81","endLine":17,"endColumn":28},{"ruleId":"68","replacedBy":"82"},{"ruleId":"70","replacedBy":"83"},{"ruleId":"72","severity":1,"message":"84","line":6,"column":11,"nodeType":"74","messageId":"75","endLine":6,"endColumn":18},{"ruleId":"72","severity":1,"message":"85","line":7,"column":11,"nodeType":"74","messageId":"75","endLine":7,"endColumn":24},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"@typescript-eslint/no-unused-vars","'tbdArray' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Assignments to the 'array' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["86"],["87"],"'SubMenu' is assigned a value but never used.","'MenuItemGroup' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]